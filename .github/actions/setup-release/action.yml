name: Set Up Release NPM and PyPI
description: Set up NPM and PyPI for release

inputs:
  use-python:
    description: "Enable Python"
    required: true
    default: false
    type: boolean
  semantic-release-app-id:
    description: "The app id for the semantic release GitHub App"
    required: true
    type: string
  semantic-release-private-key:
    description: "The private key for the semantic release GitHub App"
    required: true
    type: string
  npm-token:
    description: "The NPM token"
    required: true
    type: string
  pypi-token:
    description: "The PyPI token"
    required: true
    type: string
  nx-cache-iam-role:
    description: "The IAM role for the NxCache"
    required: true
    type: string
  nx-cache-aws-region:
    description: "The AWS region for the NxCache"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ inputs.semantic-release-app-id }}
        private_key: ${{ inputs.semantic-release-private-key }}

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.generate_token.outputs.token }}

    - uses: vm-x-ai/github-public-actions/.github/actions/setup-monorepo@main
      with:
        use-python: ${{ inputs.use-python }}

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ inputs.nx-cache-iam-role }}
        aws-region: ${{ inputs.nx-cache-aws-region }}
        role-session-name: NxCache

    - name: git config
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      shell: bash
      run: |
        git remote rm origin
        git remote add origin https://vm-x-ai:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
        git symbolic-ref HEAD refs/heads/main
        git config --global push.autoSetupRemote true
        git config user.name "vm-x-ai-release[bot]"
        git config user.email "167465110+vm-x-ai-release[bot]@users.noreply.github.com"

    - name: npm config
      shell: bash
      run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
      env:
        NPM_TOKEN: ${{ inputs.npm-token }}

    - name: poetry config
      shell: bash
      if: ${{ inputs.use-python == 'true' }}
      run: poetry config pypi-token.pypi "$PYPI_TOKEN"
      env:
        PYPI_TOKEN: ${{ inputs.pypi-token }}
